from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from models import Base

# Specify the name and directory of a SQLite database
# sqlite:// indicates that the SQLite dialect is being used
# /medical_database.db specifies the location of the database file
DATABASE_URL = "sqlite:///medical_database.db"

# Create an engine that will interact with the database.
# `echo=True` enables logging of all the SQL statements generated by SQLAlchemy to the console.
engine = create_engine(DATABASE_URL, echo=True)

# Create a configured "Session" class.
# `autocommit=False` means that transactions won't be automatically committed, giving you manual control over committing.
# `autoflush=False` means that changes won't be automatically flushed to the database, giving you manual control over flushing.
# `bind=engine` links this session configuration to the database engine we created.
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)


# Function to initialize the database.
# This function will create all the tables defined in the models if they don't already exist in the database.s
def init_db():
    Base.metadata.create_all(bind=engine)
